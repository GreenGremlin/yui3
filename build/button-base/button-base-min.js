YUI.add("button-base",function(d){function a(f){this.initializer(f);}function c(f){if(f){return d.ClassNameManager.getClassName(a.NAME,f);}else{return d.ClassNameManager.getClassName(a.NAME);}}a.prototype={constructor:a,initNode:function(f){this._host=d.one(f.srcNode||d.DOM.create("<button/>"));},renderAttrs:function(f){d.AttributeCore.call(this,a.ATTRS,f);d.AttributeEvents.apply(this,arguments);d.AttributeExtras.apply(this,arguments);},initializer:function(f){this.initNode(f);this.renderAttrs(f);this.renderUI(f);this.bindUI();},renderUI:function(f){var g=this;var h=g.getNode();h.addClass(a.CLASS_NAMES.BUTTON);this._renderType(this.get("type"));this._renderSelected(this.get("selected"));if(f.label){this._renderLabel(this.get("label"));}if(f.disabled){this._renderDisabled(this.get("disabled"));}},bindUI:function(){var f=this;var g=f.getNode();g.on("focus",f._onFocus);g.on("blur",f._onBlur);g.on("click",function(){this.fire("click");},f);f.after("labelChange",function(h){f._renderLabel(f.get("label"));});f.after("typeChange",function(h){f._renderType(f.get("type"));});f.after("disabledChange",function(h){f._renderDisabled(f.get("disabled"));});f.after("selectedChange",function(h){f._renderSelected(f.get("selected"));});},getNode:function(){return this._host;},select:function(){this.set("selected",true);},unselect:function(){this.set("selected",false);},enable:function(){this.set("disabled",false);},disable:function(){this.set("disabled",true);},_renderLabel:function(g){var f=this.getNode();f.set(f.test("input")?"value":"text",g);},_renderDisabled:function(f){this.getNode().set("disabled",f).toggleClass(a.CLASS_NAMES.DISABLED,f);},_renderSelected:function(f){this.getNode().set(this.ARIASelectedState,f).toggleClass(a.CLASS_NAMES.SELECTED,f);},_renderType:function(h){var f=this;var g=f.getNode();var i=h;if(h==="checkbox"){this.ARIASelectedState=a.ARIA.CHECKED;}else{this.ARIASelectedState=a.ARIA.PRESSED;}if(h==="toggle"||h==="checkbox"){f._clickHandler=g.on("click",function(){f.set("selected",!f.get("selected"));},f);}else{if(h==="radio"){}else{if(!g.test("input")&&!g.test("button")){i="button";}if(f._clickHandler){f._clickHandler.detach();f._clickHandler=false;}}}g.set("role",i);}};a.ATTRS={label:{},type:{_bypassProxy:true,value:"push"},disabled:{_bypassProxy:true,value:false},selected:{_bypassProxy:true,value:false}};a.NAME="button";a.CLASS_NAMES={BUTTON:c(),SELECTED:c("selected"),FOCUSED:c("focused"),DISABLED:c("disabled")};a.ARIA={CHECKED:"aria-checked",PRESSED:"aria-pressed"};a.prototype._onBlur=function(f){f.target.removeClass(a.CLASS_NAMES.FOCUSED);};a.prototype._onFocus=function(f){f.target.addClass(a.CLASS_NAMES.FOCUSED);};d.mix(a.prototype,d.Attribute.prototype);d.ButtonBase=a;function e(f){e.superclass.constructor.call(this,f.srcNode||"<button/>");this.initializer(f);}d.extend(e,d.Node,{initNode:function(){this._host=this;}});d.mix(e.prototype,d.ButtonBase.prototype,true);e.ATTRS=d.merge(d.ButtonBase.ATTRS,d.Node.ATTRS);d.Button=e;function b(){b.superclass.constructor.apply(this,arguments);}d.extend(b,d.ButtonBase,{initNode:function(f){this._host=f.host;}},{NAME:"ButtonPlugin",NS:"button"});d.Plugin.Button=b;},"@VERSION@",{requires:["base","classnamemanager","node"]});